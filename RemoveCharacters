//Remove Characters
typedef struct node{
    char data;
    struct node* next;
} node;

node* top = NULL;

void insert(char ch){
    node* newTop = malloc(sizeof(node));
    newTop -> data = ch;
    newTop -> next = top;
    top = newTop;
}

void pop(){
    node* prevTop = top;
    top = top -> next;
    free(prevTop);
}

char* removeDuplicateLetters(char* s) {
    top = NULL;
    int last[26] = {0};
    int isPresent[26] = {0};
    int cnt = 0;

    for(int i = 0 ; s[i] != '\0' ; i++){
        last[s[i] - 'a'] = i;
    }

    for(int i = 0 ; s[i] != '\0' ; i++){
        if(isPresent[s[i] - 'a']) continue;
        else if(!top || top -> data < s[i]){
            insert(s[i]);
            isPresent[s[i] - 'a'] = 1;
            cnt++;
        }else if(top -> data > s[i]){
            while(top && top -> data > s[i] && last[top -> data - 'a'] > i){
                isPresent[top -> data - 'a'] = 0;
                pop();
                cnt--;
            }

            insert(s[i]);
            isPresent[s[i] - 'a'] = 1;
            cnt++;
        }
    }

    char *ans = (char*)malloc(sizeof(char) * (cnt + 1));
    int j = cnt -1;
   
    while(top){
        ans[j--] = top -> data;
        top = top -> next;
    }

    ans[cnt] = '\0';
    return ans;
}

